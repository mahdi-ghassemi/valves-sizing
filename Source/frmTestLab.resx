<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAoHBwkHBgoJCAkLCwoMDxkQDw4ODx4WFxIZJCAmJSMgIyIo
        LTkwKCo2KyIjMkQyNjs9QEBAJjBGS0U+Sjk/QD3/2wBDAQsLCw8NDx0QEB09KSMpPT09PT09PT09PT09
        PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT3/wAARCAAiAKUDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD2OaUQwvKwYqiliFGTgegrH8L+KrTxXZTXNnDcRLFJ5ZEy4ycZ
        4wSP8KqWfjWK48Z3Hh2azkt5o92yV3GJMAEYHuDn8DVX4nzJbeB7lQ4jeSSNUCnBJ3gnH4AmgB/jLxu3
        hS9sYFsRc/agTuMuzbggehz1rra8G15ZI/CvhCaYPt2TEu2T/wAtQw5+nNe7RSpNEskTq8bgMrKcgj1B
        oAfRRRQAUVn6/qf9jaDfagFDNbws6qehOOB+eK868F6IvjqC61LxBqd3dTLMYxbpOUVBgHOB0Bzxjjjv
        QB6rRXkt1cXHgLx5Z6fpN/cXdlcmPzLSWTzNu5tuPY9wevrmu51nwTpOuX7Xl59qE7KF3RXDoAB04BxQ
        B0NclpPjdtT8a3mgGxEYtjIPO83O7aQPu4759a5jRtTvvDXxHHh231CbUtOkcJtmfe0WV3dexXv2x2zT
        fCv/ACWbV/rcf+hLQB6tRXlnih3Hxl0hQ7hSYOAxx95u1ep0AQz9Yv8AroKmqGfrF/10FTUAFZuu+INP
        8O2JutSm8tCcIgGXkPoo71pV88eMNdm1/wAR3dzK58qN2igQ9ERTj9cZP1oA6DXPi1q16zJpccdhB2cg
        PIR9TwPy/Gt3wf4k8baisZl02O8tDj/SLj/RyR7HHzfgtS+A/AFnZafDq+sxpLcyIJY45PuQL1BI6Fsc
        5PStPVfHUiQSSaNp0tzBHw126MIh9MdR78VcISnsTOcY7nYqSVBYANjkA5xRXmtj8RdTXzPtUNvNnG3C
        ldv680Vo8NURksRBnY694S0rxE0cl9Cy3EX+ruIXKSL9GH9ayT8NNLuLmOXU73U9REf3UurksoHpwAa1
        YNVeCyjiEDSXZCEJ/wA9GY/Pg9Bg7uvTFIx1qVGLQhHdQFCuNqEHPPzfhkHt07VnyM15y9f6Lp2p6cLC
        8s4pbVQAsZXAXHTGOmPaueT4a6VACtpfavax54jhvWVR+FbF7q1xCy2kUG68chQRnYMqDu+mcj8Oarfb
        9WtL6O3kthMZQWBBGCdvQHPABHPHehQYOaKX/Cu7P/oM69/4Hn/Cj/hXdn/0Gde/8Dz/AIVsLPePeW5n
        t/IbeygBwxZNrE9PcJ+NZb3upPHqNr9lvriKWDbbNNAqneQQQeg29Oo9etChcTnYrT/DTTLiIpc6nrMs
        XUrJeFl/IikT4aaAWWbTp760O3aXtbsjd9TzWkdSujHptnHDLbT70E/mhVUoBhgOecnAG2qGj399p32W
        xMM8ogsP30SIH8uUtldx69O1P2bsL2iuXtF8C6Jod39rt4JJrsHPn3EhkcH1GeAfejVvBdprGoS3c+oa
        rEZQAYoLspHwMcKPpVfSn1UP500V0nnQs94TAissuAF8sD73AI5zwBUd1qeq2UEct9PLb2fmyAS7I/PK
        4GwlOh53ZAGenSj2bva4e00vY09C8IaP4dZpNOtAs7DDTOxdyPqen4VXHh6z8P3eqa9YWc95qVwGcx+Z
        yxJyVXsMnFMj1vUpU0p3srlGPN2nlhd3yHhQxyeecDsDVVrvW7i9jmkXU4IlllDJDAuAmP3ZAIO73z09
        qPZPuHtEZej+F9b1rxoniTxFDHZrDgw2yuGbgEKOOgGSfUntXolc9Yajqt3JpcU8D28vzNeb0ChgFIG0
        HknJUnHSuhqZR5S4y5iGfrF/10FTVDP1i/66CpqkYV8w3v8Ax9XX/XR/5mvp6vmvXtKvtI1C4i1C1lt3
        Z3Zd44YZPIPQ/hQB9FW8Uc+mQxSorxtEoZWGQRjoRVPxMFj8K6iqgKotnAA4A4q9aME06BmOAIlJ/KsT
        U7G/8TH7Mxax0rI3k/66fHbH8K/Xn2q4bpvYie1luec6Jol5rHnm0jLCLaGP1z/hRXr+n6dbaXZpa2cS
        xRL2Hc+pPc0VvLFSvoYxwytqWQAvQAc54paKK5TpCiiigBMDdnAyBjNLRRQBG9vDLIskkUbOn3WZQSv0
        NPwB260UVT2RK3YtIVDEEgEjpkdKKKkoRo0dlZkVmQ5UkcqenFOoopsSGmNDIshRS6ggMRyAevP4U6ii
        hgiOUZ2f74qSiikMKztftLe80O7juoIpkETMFkQMM464NFFAFuz/AOPKD/rmv8qmoooAKKKKAP/Z
</value>
  </data>
</root>